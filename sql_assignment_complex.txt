1)	WRITE A SQL STATEMENT TO DISPLAY THE LOWEST PAID EMPLOYEE'S (NAME , SALARY , DEPARTMENT NAME)
A) 	-> SELECT E.FIRST_NAME,min(E.SALARY),d.department_name from employees e, departments d;

2)	LIST MINIMUM SALARY FOR EACH DEPARTMENT
A)	->SELECT department_id ,min(salary) 
	->FROM employees
	->GROUP BY department_id;

3)	WRITE A QUERY  BASED ON  FOLLOWING RESULT. 
A)	->SELECT E.EMPLOYEE_ID,E.FIRTS_NAME,E.JOB_ID,E.SALARY,D.DEPARTMENT_ID,D.DEPARTMENT_NAME
	->FROM EMPLOYEES E
	->INNER JOIN DEPARTMENT D
	->ON D.DEPARTMENT_ID=E.DEPARTMENT_ID

4)	LIST ALL THE EMPLOYEES WHO ARE WORKING IN FORD’S DEPARTMENT.
A)	->SELECT e.employee_id,e.first_name,e.job_id,e.salary,d.department_id,d.department_name
	->FROM employees e
	->INNER JOIN departments d
	->ON d.department_id=e.department_id
	->WHERE department_name='training';

5)	LIST ALL EMPLOYEE WHO ARE WORKING IN WARD'S DEPARTMENT AND
	EARNING MORE THEN MARTIN
A)	->SELECT e.employee_id,e.first_name,e.job_id,e.salary,d.department_id,d.department_name
	->FROM employees e
	->ON d.department_id=e.department_id
	->WHERE department_name='training' and salary > (SELECT salary from employees where first_name='Donald');

6)	DISPLAY EMPLOYEE NUMBER, NAME,DEPT NUMBER, DEPT NAME, AND LOCATION
A)	->SELECT e.employee_id,e.first_name,d.department_id,d.department_name,d.location_id
	->FROM employees e
	->INNER JOIN departments d
	->ON d.department_id=e.department_id;

7)	DISPLAY THE FOLLOWING RESULT
A)	->SELECT e.first_name,d.department_id,d.department_name
	->FROM employees e
	->INNER JOIN departments d
	->ON d.department_id=e.department_id;

8)	LIST ALL THE EMPLOYEE WHO ARE WORKING IN NEW YORK
A)	->SELECT e.first_name,d.department_id,d.department_name,l.city
	->FROM employees e
	->INNER JOIN departments d
	->ON d.department_id=e.department_id
	->INNER JOIN locations l
	->ON d.location_id=l.location_id;

9)	WRITE A SQL STATEMENT TO DISPLAY THE LOWEST PAID EMPLOYEE'S (NAME , SALARY , DEPARTMENT NAME) IN THE RESPECTIVE DEPARTMENT.

    ->SELECT E.FIRST_NAME,MIN(E.SALARY),D.DEPARTMENT_NAME
    -> FROM EMPLOYEES E
    -> INNER JOIN DEPARTMENTS D
    -> ON E.DEPARTMENT_ID=D.DEPARTMENT_ID
    -> GROUP BY D.DEPARTMENT_NAME;



10)	WRITE A SQL STATEMENT TO DISPLAY THE HIGHEST PAID EMPLOYEE'S (NAME, JOB, MANAGER NAME, SALARY AND DEPARTMENT NAME AND DEPARTMENT NO.) IN THE RESPECTIVE DEPARTMENT.

    ->SELECT E.FIRST_NAME,E.JOB_ID,E1.FIRST_NAME AS MANAGER_NAME,MAX(E.SALARY),D.DEPARTMENT_NAME,D.DEPARTMENT_ID
    -> FROM EMPLOYEES E
    -> INNER JOIN DEPARTMENTS D
    -> ON E.DEPARTMENT_ID=D.DEPARTMENT_ID
    -> INNER JOIN EMPLOYEES E1
    -> ON E.EMPLOYEE_ID=E1.MANAGER_ID
    -> GROUP BY D.DEPARTMENT_NAME;



11)	WRITE A SQL STATEMENT TO DISPLAY THE EMPLOYEE NAME (BOSS) AND NUMBER OF EMPLOYEE (SUBORDINATES) DIRECTLY REPORTING TO HIM?

    ->SELECT (SELECT FIRST_NAME
    -> FROM EMPLOYEES
    -> WHERE EMPLOYEE_ID=E.MANAGER_ID)
    -> AS BOSS,COUNT(E.MANAGER_ID)
    -> FROM EMPLOYEES E
    -> GROUP BY E.MANAGER_ID;



12)	DISPLAY THE NAMES, DESIGNATION AND SALARIES OF ALL EMPLOYEES WHO HAVE MANAGER ALONG WITH MANAGER'S NAME, DESIGNATION AND MANAGER'S SALARY.
	(SELF-JOIN)

    ->SELECT E.EMPLOYEE_ID,E.FIRST_NAME,E.JOB_ID,E.SALARY,E1.FIRST_NAME,E1.JOB_ID,E1.SALARY
    -> FROM EMPLOYEES E
    -> RIGHT JOIN EMPLOYEES E1
    -> ON E.EMPLOYEE_ID=E1.EMPLOYEE_ID;




13)	 CREATE THE FOLLOWING TABLES:
ORDER: {ID, ORDERDATE, ORDERNUMBER}
ORDER_ITEM: {ID, ORDERID, PRODUCTID, UNITPRICE, QUANTITY}
PRODUCT: {ID, PRODUCTNAME}
WRITE A QUERY TO DISPLAY THE FOLLOWING OUTPUT SORTED BY ORDER NO:

ORDER_NO	ORDER_DATE	PRODUCT_NAME	QUANTITY	UNIT_PRICE
7369	7/4/2012 12:00:00 AM	EASY-TRADING	800	20
7900	2/10/2011 12:00:00 AM	BANK-ANYWHERE	950	30
7934	9/23/2015 12:00:00 AM	TRIP-MANAGER	1300	10


14)	 FIND THE 2ND MINIMUM SALARY OF THE EMPLOYEE.

    ->SELECT MIN(SALARY),FIRST_NAME
    -> FROM EMPLOYEES
    -> WHERE SALARY!=(SELECT MIN(SALARY) FROM EMPLOYEES);



15)	 FIND THE MAX 3 SALARIES FROM EMPLOYEE TABLE.

    ->SELECT SALARY,FIRST_NAME
    -> FROM EMPLOYEES
    -> ORDER BY SALARY DESC LIMIT 3;



16)	 DISPLAY COMMON RECORDS FROM EMP_1 & EMP_2 TABLES. (USE INTERSECT)

17)	 DISPLAY DEPARTMENT NO WISE TOTAL SALARY WHERE MORE THAN 2 EMPLOYEES EXIST IN A DEPARTMENT.
